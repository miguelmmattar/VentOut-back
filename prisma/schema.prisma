// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "debian-openssl-1.1.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  name       String
  Session    Session[]
  MyMoods    MyMoods[]
  MyReports  MyReports[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt 
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  closedAt  DateTime @updatedAt
}

model Moods {
  id        Int      @id @default(autoincrement())
  name      String
  color     String
  MyMoods   MyMoods[] 
}

model MyMoods {
  id        Int       @id @default(autoincrement())
  userId    Int
  User      User      @relation(fields: [userId], references: [id])
  moodId    Int
  Moods     Moods      @relation(fields: [moodId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model MyReports {
  id          Int            @id @default(autoincrement())
  userId      Int
  User        User           @relation(fields: [userId], references: [id])
  date        DateTime 
  MyEmotions  MyEmotions[]
  MySymptoms  MySymptoms[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Emotions {
  id          Int           @id @default(autoincrement())
  name        String
  color       String
  MyEmotions  MyEmotions[] 
}

model MyEmotions {
  id          Int           @id @default(autoincrement())
  reportId    Int
  MyReports   MyReports     @relation(fields: [reportId], references: [id])
  emtionId    Int
  Emotions    Emotions      @relation(fields: [emtionId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Symptoms {
  id              Int           @id @default(autoincrement())
  name            String
  type            SymptomType
  spotId          Int
  Spots           Spots         @relation(fields: [spotId], references: [id])
  MySymptoms      MySymptoms[] 
}

enum SymptomType {
  PHYSICAL
  EMOTIONAL
}

model MySymptoms {
  id          Int           @id @default(autoincrement())
  reportId    Int
  MyReports   MyReports     @relation(fields: [reportId], references: [id])
  symptomId   Int
  Symptoms    Symptoms      @relation(fields: [symptomId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Spots {
  id          Int          @id @default(autoincrement())
  name        String
  color       String
  Symptoms    Symptoms[] 
}
